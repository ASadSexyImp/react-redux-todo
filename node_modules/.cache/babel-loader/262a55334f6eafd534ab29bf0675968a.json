{"ast":null,"code":"var _jsxFileName = \"/Users/spidey/projects/react-redux-todo/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./components/App\";\nimport { addTodo } from \"./actions\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducers from \"./reducers\";\nconsole.log(reducers);\nlet store = createStore(reducerscompose(applyMiddleware(ReduxPromise)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/spidey/projects/react-redux-todo/src/index.js"],"names":["React","ReactDOM","Provider","createStore","App","addTodo","serviceWorker","reducers","console","log","store","reducerscompose","applyMiddleware","ReduxPromise","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,IAAIG,KAAK,GAAGP,WAAW,CAACQ,eAAe,CAACC,eAAe,CAACC,YAAD,CAAhB,CAAhB,CAAvB;AAEAZ,QAAQ,CAACa,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport { addTodo } from \"./actions\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducers from \"./reducers\";\n\nconsole.log(reducers);\nlet store = createStore(reducerscompose(applyMiddleware(ReduxPromise)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}