{"ast":null,"code":"var _jsxFileName = \"/Users/spidey/projects/react-redux-todo/src/components/TodoList.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport Todo from \"./Todo\"; // Todo引き継ぎ\n\nconst TodoList = ({\n  todos,\n  toggleTodo\n}) => {\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, todos.map(todo => React.createElement(Todo, Object.assign({\n    key: todo.id\n  }, todo, {\n    onClick: () => toggleTodo(todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }))));\n  TodoList.propTypes = {\n    todos: PropTypes.arrayOF(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired).isRequired\n  };\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/spidey/projects/react-redux-todo/src/components/TodoList.js"],"names":["React","propTypes","Todo","TodoList","todos","toggleTodo","map","todo","id","PropTypes","arrayOF","shape","number","isRequired","text","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAA2B;;AAE3B,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC1C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,KAAwBD,IAAxB;AAA8B,IAAA,OAAO,EAAE,MAAMF,UAAU,CAACE,IAAI,CAACC,EAAN,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADF;AAQAL,EAAAA,QAAQ,CAACF,SAAT,GAAqB;AACnBG,IAAAA,KAAK,EAAEK,SAAS,CAACC,OAAV,CACLD,SAAS,CAACE,KAAV,CAAgB;AACdH,MAAAA,EAAE,EAAEC,SAAS,CAACG,MAAV,CAAiBC,UADP;AAEdC,MAAAA,IAAI,EAAEL,SAAS,CAACM,MAAV,CAAiBF;AAFT,KAAhB,EAGGA,UAJE,EAKLA;AANiB,GAArB;AAQD,CAjBD;;AAmBA,eAAeV,QAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport Todo from \"./Todo\"; // Todo引き継ぎ\n\nconst TodoList = ({ todos, toggleTodo }) => {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n      ))}\n    </ul>\n  );\n\n  TodoList.propTypes = {\n    todos: PropTypes.arrayOF(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        text: PropTypes.string.isRequired\n      }).isRequired\n    ).isRequired\n  };\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}