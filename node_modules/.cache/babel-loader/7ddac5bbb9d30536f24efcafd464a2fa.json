{"ast":null,"code":"import _objectSpread from \"/Users/spidey/projects/react-redux-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"../actions\";\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        completed: !todo.completed\n      }) : todo);\n\n    case DELETE_TODO:\n      const deleteId = action.id;\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/spidey/projects/react-redux-todo/src/reducers/todo.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","todos","state","action","type","id","text","completed","map","todo","deleteId","filter"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,YAAnD;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAW;AAAEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EAAb;AAAiBC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAA9B;AAAoCC,QAAAA,SAAS,EAAE;AAA/C,OAAX,CAAP;;AACF,SAAKR,WAAL;AACE,aAAOG,KAAK,CAACM,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,qBAA6BI,IAA7B;AAAmCF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAApD,WAAkEE,IAD7D,CAAP;;AAGF,SAAKT,WAAL;AACE,YAAMU,QAAQ,GAAGP,MAAM,CAACE,EAAxB;AACA,aAAOH,KAAK,CAACS,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AACF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"../actions\";\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, { id: action.id, text: action.text, completed: false }];\n    case TOGGLE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case DELETE_TODO:\n      const deleteId = action.id;\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}